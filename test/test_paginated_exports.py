# coding: utf-8

"""
    Digital Asset

    Layer1 API making management of crypto assets simple and easy

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.com_layer1_clients_digital_model.paginated_exports import PaginatedExports

class TestPaginatedExports(unittest.TestCase):
    """PaginatedExports unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedExports:
        """Test PaginatedExports
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedExports`
        """
        model = PaginatedExports()
        if include_optional:
            return PaginatedExports(
                total_elements = 56,
                content = [
                    openapi_client.models.export.Export(
                        id = '3fa85f64-5717-4562-b3fc-2c963f66afa6', 
                        status = 'PROCESSING', 
                        type = 'transaction', 
                        input_parameters = {from=2020-01-01T00:00:00Z, to=2020-01-31T23:59:59Z}, 
                        filename = 'transaction_2024_04_19T11_20_11_901Z.csv', 
                        url = '', 
                        created_at = '2020-01-01T00:00:00Z', 
                        updated_at = '2020-01-02T12:34:56Z', )
                    ],
                pageable = openapi_client.models.pageable.Pageable(
                    page_number = 56, 
                    page_size = 56, )
            )
        else:
            return PaginatedExports(
        )
        """

    def testPaginatedExports(self):
        """Test PaginatedExports"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
